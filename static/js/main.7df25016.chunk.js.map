{"version":3,"sources":["Components/Form.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","gridroot","marginTop","flexGrow","root","textAlign","marginLeft","marginBottom","paper","borderRadius","height","width","transition","backgroundColor","transform","media","padding","ValidationTextField","withStyles","borderColor","borderWidth","TextField","Form","props","useState","input","setState","classes","className","autoComplete","required","variant","placeholder","id","value","onChange","e","target","Grid","container","justify","spacing","list","filter","person","name","includes","map","key","style","item","xs","md","lg","Paper","alt","src","App","state","getNameList","a","axios","get","response","data","getName","document","querySelector","classList","add","this","React","Component","ReactDOM","render","getElementById"],"mappings":"8VAOMA,G,MAAYC,aAAW,SAACC,GAAD,MAAU,CACnCC,SAAS,CAELC,UAAW,KACXC,SAAU,GAEdC,KAAM,CACJC,UAAW,SACXC,WAAY,OACZC,aAAc,MAGhBC,MAAO,CACLC,aAAe,OACfC,OAAQ,IACRC,MAAO,IACPC,WAAY,gBACZC,gBAAiB,UACjB,UAAW,CACTC,UAAY,gBAIhBC,MAAO,CACLJ,MAAO,IACPD,OAAQ,IACRM,QAAS,YAITC,EAAsBC,YAAW,CACnCd,KAAM,CACJ,2BAA4B,CAC1Be,YAAa,UACbC,YAAa,GAEf,6BAA8B,CAC5BD,YAAa,UACbC,YAAa,GAEf,iCAAkC,CAChCD,YAAa,UACbC,YAAa,EACbJ,QAAS,oBAbWE,CAgBvBG,KAIU,SAASC,EAAKC,GAAO,IAAD,EAGDC,mBAAS,IAHR,mBAGpBC,EAHoB,KAGbC,EAHa,KAIrBC,EAAU7B,IAChB,OACI,oCACA,yBAAK8B,UAAU,aACX,0BAAMC,aAAa,OACf,kBAACZ,EAAD,CACAa,UAAQ,EACRC,QAAQ,WACRC,YAAY,UACZC,GAAG,4BACHC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAASU,EAAEC,OAAOH,YAI3C,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACX,UAAWD,EAAQ1B,SAAUuC,QAAQ,SAASC,QAAS,GACtElB,EAAMmB,KACNC,QAAO,SAAAC,GAAM,MAAc,KAAVnB,GAAgBmB,EAAOC,KAAKC,SAASrB,MACtDsB,KAAI,SAAAH,GAAM,OACX,yBAAKI,IAAKJ,EAAOX,GAAIL,UAAWD,EAAQvB,KAAM6C,MAAO,CAAC5C,UAAW,WAC/D,kBAACiC,EAAA,EAAD,CAAMY,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACxB,kBAACf,EAAA,EAAD,CAAMY,MAAI,GACR,kBAACI,EAAA,EAAD,CAAO1B,UAAWD,EAAQnB,OACxB,yBAAK+C,IAAI,YAAY3B,UAAWD,EAAQZ,MAAOyC,IAAG,+BAA0BZ,EAAOX,GAAjC,6BAClD,wBAAIgB,MAAO,CAAC5C,UAAW,WAAYuC,EAAOC,e,qBCpDnDY,E,4MA3BXC,MAAO,CACHC,YAAa,I,kEAEG,IAAD,QACF,uCAAG,4BAAAC,EAAA,sEACWC,IAAMC,IAAN,8CADX,OACNC,EADM,OAEZ,EAAKrC,SAAS,CAACiC,YAAYI,EAASC,OAFxB,2CAAH,qDAIbC,GAEgBC,SAASC,cAAc,QAC/BC,UAAUC,IAFA,gB,+BAKlB,OACI,yBAAKpB,MAAO,CAACvC,OAAQ,UACjB,wBAAIkB,UAAU,WAAd,eAGA,kBAAC,EAAD,CAAMc,KAAM4B,KAAKZ,MAAMC,mB,GApBrBY,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAAOR,SAASS,eAAe,W","file":"static/js/main.7df25016.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport {Grid} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper'\nimport { withStyles, makeStyles } from '@material-ui/core'\nimport './Form.css'\n\nconst useStyles = makeStyles((theme)=>({\n    gridroot:{\n        \n        marginTop: '3%',\n        flexGrow: 1,\n    },\n    root: {\n      textAlign: 'center',\n      marginLeft: '1.5%',\n      marginBottom: '2%',\n      \n    },\n    paper: {\n      borderRadius : '10px',\n      height: 350,\n      width: 275,\n      transition: 'transform .2s',\n      backgroundColor: '#FFB6C1',\n      '&:hover': {\n        transform : 'scale(1.05)'\n     },\n    },\n    \n    media: {\n      width: 200,\n      height: 200,\n      padding: '10%',\n    }\n}));\n\nconst ValidationTextField = withStyles({\n    root: {\n      '& input:valid + fieldset': {\n        borderColor: '#00FF00',\n        borderWidth: 2,\n      },\n      '& input:invalid + fieldset': {\n        borderColor: '#FFB6C1',\n        borderWidth: 2,\n      },\n      '& input:valid:focus + fieldset': {\n        borderColor: \"#3F51B5\",\n        borderWidth: 2,\n        padding: '4px !important', // override inline-style\n      },\n    },\n  })(TextField);\n\n \n\nexport default function Form(props){   \n        \n        \n        const [input, setState] = useState('');\n        const classes = useStyles()\n        return(\n            <>\n            <div className=\"container\">\n                <form autoComplete=\"off\">\n                    <ValidationTextField\n                    required\n                    variant=\"outlined\"\n                    placeholder=\"Charlie\"\n                    id=\"validation-outlined-input\"\n                    value={input}\n                    onChange={(e) => setState(e.target.value)}\n                    />       \n                </form>                \n            </div>\n            <Grid container className={classes.gridroot} justify=\"center\" spacing={2}>\n            {props.list\n            .filter(person => input === '' || person.name.includes(input))\n            .map(person => (\n            <div key={person.id} className={classes.root} style={{textAlign: \"center\"}}>\n              <Grid item xs={12} md={6} lg={3}>                                  \n                    <Grid item>\n                      <Paper className={classes.paper}>\n                        <img alt=\"Cat Image\" className={classes.media} src={`https://robohash.org/${person.id}/?set=set4&size=200x200`}/>\n                        <h2 style={{textAlign: \"center\"}}>{person.name}</h2>\n                      </Paper>\n                    </Grid>                \n               \n              </Grid> \n              </div>\n            ))}\n            </Grid>\n            \n            </>\n        )\n    }\n \n\n","import React from 'react'\nimport './App.css'\nimport Form from './Components/Form'\nimport axios from 'axios'\n\nclass App extends React.Component{\n    state= {\n        getNameList: []\n    }\n    componentDidMount(){   \n        const getName = async () =>{\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/users`)\n            this.setState({getNameList:response.data})\n        }\n        getName()     \n        const className = 'background'\n        const docBody = document.querySelector('body')\n        docBody.classList.add(className)\n       }\n    render(){\n        return(\n            <div style={{height: \"100vh\"}}>\n                <h1 className=\"cathead\">\n                    Cat friends\n                </h1>\n                <Form list={this.state.getNameList}/>\n                {/* {this.state.getNameList.map(person => (\n                    \n                ))} */}\n            </div>\n        )\n    }\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}